// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: result.proto

#include "result.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_gtx_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AccessibilityHierarchy_gtx_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_result_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CheckResultProto_result_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_result_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IntListProto_result_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_result_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MetadataProto_result_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_result_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MetadataProto_MetadataMapEntry_DoNotUse_result_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_result_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StringListProto_result_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_result_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_TypedValueProto_result_2eproto;
namespace gtxilib {
namespace oopclasses {
namespace protos {
class StringListProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StringListProto> _instance;
} _StringListProto_default_instance_;
class IntListProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntListProto> _instance;
} _IntListProto_default_instance_;
class TypedValueProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TypedValueProto> _instance;
  bool boolean_value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr byte_value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr short_value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr char_value_;
  ::PROTOBUF_NAMESPACE_ID::int32 int_value_;
  float float_value_;
  ::PROTOBUF_NAMESPACE_ID::int64 long_value_;
  double double_value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_value_;
  const ::gtxilib::oopclasses::protos::StringListProto* string_list_value_;
  const ::gtxilib::oopclasses::protos::IntListProto* int_list_value_;
} _TypedValueProto_default_instance_;
class MetadataProto_MetadataMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MetadataProto_MetadataMapEntry_DoNotUse> _instance;
} _MetadataProto_MetadataMapEntry_DoNotUse_default_instance_;
class MetadataProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MetadataProto> _instance;
} _MetadataProto_default_instance_;
class CheckResultProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CheckResultProto> _instance;
} _CheckResultProto_default_instance_;
class AccessibilityEvaluationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccessibilityEvaluation> _instance;
} _AccessibilityEvaluation_default_instance_;
}  // namespace protos
}  // namespace oopclasses
}  // namespace gtxilib
static void InitDefaultsscc_info_AccessibilityEvaluation_result_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gtxilib::oopclasses::protos::_AccessibilityEvaluation_default_instance_;
    new (ptr) ::gtxilib::oopclasses::protos::AccessibilityEvaluation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gtxilib::oopclasses::protos::AccessibilityEvaluation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AccessibilityEvaluation_result_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_AccessibilityEvaluation_result_2eproto}, {
      &scc_info_AccessibilityHierarchy_gtx_2eproto.base,
      &scc_info_CheckResultProto_result_2eproto.base,}};

static void InitDefaultsscc_info_CheckResultProto_result_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gtxilib::oopclasses::protos::_CheckResultProto_default_instance_;
    new (ptr) ::gtxilib::oopclasses::protos::CheckResultProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gtxilib::oopclasses::protos::CheckResultProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CheckResultProto_result_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CheckResultProto_result_2eproto}, {
      &scc_info_MetadataProto_result_2eproto.base,}};

static void InitDefaultsscc_info_IntListProto_result_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gtxilib::oopclasses::protos::_IntListProto_default_instance_;
    new (ptr) ::gtxilib::oopclasses::protos::IntListProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gtxilib::oopclasses::protos::IntListProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IntListProto_result_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IntListProto_result_2eproto}, {}};

static void InitDefaultsscc_info_MetadataProto_result_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gtxilib::oopclasses::protos::_MetadataProto_default_instance_;
    new (ptr) ::gtxilib::oopclasses::protos::MetadataProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gtxilib::oopclasses::protos::MetadataProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MetadataProto_result_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MetadataProto_result_2eproto}, {
      &scc_info_MetadataProto_MetadataMapEntry_DoNotUse_result_2eproto.base,}};

static void InitDefaultsscc_info_MetadataProto_MetadataMapEntry_DoNotUse_result_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gtxilib::oopclasses::protos::_MetadataProto_MetadataMapEntry_DoNotUse_default_instance_;
    new (ptr) ::gtxilib::oopclasses::protos::MetadataProto_MetadataMapEntry_DoNotUse();
  }
  ::gtxilib::oopclasses::protos::MetadataProto_MetadataMapEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MetadataProto_MetadataMapEntry_DoNotUse_result_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MetadataProto_MetadataMapEntry_DoNotUse_result_2eproto}, {
      &scc_info_TypedValueProto_result_2eproto.base,}};

static void InitDefaultsscc_info_StringListProto_result_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gtxilib::oopclasses::protos::_StringListProto_default_instance_;
    new (ptr) ::gtxilib::oopclasses::protos::StringListProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gtxilib::oopclasses::protos::StringListProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StringListProto_result_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StringListProto_result_2eproto}, {}};

static void InitDefaultsscc_info_TypedValueProto_result_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gtxilib::oopclasses::protos::_TypedValueProto_default_instance_;
    new (ptr) ::gtxilib::oopclasses::protos::TypedValueProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gtxilib::oopclasses::protos::TypedValueProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_TypedValueProto_result_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_TypedValueProto_result_2eproto}, {
      &scc_info_StringListProto_result_2eproto.base,
      &scc_info_IntListProto_result_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_result_2eproto[7];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_result_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_result_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_result_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::StringListProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::StringListProto, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::IntListProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::IntListProto, values_),
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::TypedValueProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::TypedValueProto, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::TypedValueProto, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::TypedValueProto, type_),
  offsetof(::gtxilib::oopclasses::protos::TypedValueProtoDefaultTypeInternal, boolean_value_),
  offsetof(::gtxilib::oopclasses::protos::TypedValueProtoDefaultTypeInternal, byte_value_),
  offsetof(::gtxilib::oopclasses::protos::TypedValueProtoDefaultTypeInternal, short_value_),
  offsetof(::gtxilib::oopclasses::protos::TypedValueProtoDefaultTypeInternal, char_value_),
  offsetof(::gtxilib::oopclasses::protos::TypedValueProtoDefaultTypeInternal, int_value_),
  offsetof(::gtxilib::oopclasses::protos::TypedValueProtoDefaultTypeInternal, float_value_),
  offsetof(::gtxilib::oopclasses::protos::TypedValueProtoDefaultTypeInternal, long_value_),
  offsetof(::gtxilib::oopclasses::protos::TypedValueProtoDefaultTypeInternal, double_value_),
  offsetof(::gtxilib::oopclasses::protos::TypedValueProtoDefaultTypeInternal, string_value_),
  offsetof(::gtxilib::oopclasses::protos::TypedValueProtoDefaultTypeInternal, string_list_value_),
  offsetof(::gtxilib::oopclasses::protos::TypedValueProtoDefaultTypeInternal, int_list_value_),
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::TypedValueProto, value_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::MetadataProto_MetadataMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::MetadataProto_MetadataMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::MetadataProto_MetadataMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::MetadataProto_MetadataMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::MetadataProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::MetadataProto, metadata_map_),
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::CheckResultProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::CheckResultProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::CheckResultProto, source_check_class_),
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::CheckResultProto, result_id_),
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::CheckResultProto, hierarchy_source_id_),
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::CheckResultProto, result_type_),
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::CheckResultProto, metadata_),
  ~0u,
  ~0u,
  0,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::AccessibilityEvaluation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::AccessibilityEvaluation, hierarchy_),
  PROTOBUF_FIELD_OFFSET(::gtxilib::oopclasses::protos::AccessibilityEvaluation, results_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gtxilib::oopclasses::protos::StringListProto)},
  { 6, -1, sizeof(::gtxilib::oopclasses::protos::IntListProto)},
  { 12, 30, sizeof(::gtxilib::oopclasses::protos::TypedValueProto)},
  { 42, 49, sizeof(::gtxilib::oopclasses::protos::MetadataProto_MetadataMapEntry_DoNotUse)},
  { 51, -1, sizeof(::gtxilib::oopclasses::protos::MetadataProto)},
  { 57, 67, sizeof(::gtxilib::oopclasses::protos::CheckResultProto)},
  { 72, -1, sizeof(::gtxilib::oopclasses::protos::AccessibilityEvaluation)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gtxilib::oopclasses::protos::_StringListProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gtxilib::oopclasses::protos::_IntListProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gtxilib::oopclasses::protos::_TypedValueProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gtxilib::oopclasses::protos::_MetadataProto_MetadataMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gtxilib::oopclasses::protos::_MetadataProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gtxilib::oopclasses::protos::_CheckResultProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gtxilib::oopclasses::protos::_AccessibilityEvaluation_default_instance_),
};

const char descriptor_table_protodef_result_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014result.proto\022\031gtxilib.oopclasses.proto"
  "s\032\013enums.proto\032\tgtx.proto\"!\n\017StringListP"
  "roto\022\016\n\006values\030\001 \003(\t\"\036\n\014IntListProto\022\016\n\006"
  "values\030\001 \003(\005\"\342\004\n\017TypedValueProto\022G\n\004type"
  "\030\001 \001(\01624.gtxilib.oopclasses.protos.Typed"
  "ValueProto.TypeProtoH\001\210\001\001\022\027\n\rboolean_val"
  "ue\030\002 \001(\010H\000\022\024\n\nbyte_value\030\003 \001(\014H\000\022\025\n\013shor"
  "t_value\030\004 \001(\014H\000\022\024\n\nchar_value\030\005 \001(\014H\000\022\023\n"
  "\tint_value\030\006 \001(\005H\000\022\025\n\013float_value\030\007 \001(\002H"
  "\000\022\024\n\nlong_value\030\010 \001(\003H\000\022\026\n\014double_value\030"
  "\t \001(\001H\000\022\026\n\014string_value\030\n \001(\tH\000\022G\n\021strin"
  "g_list_value\030\013 \001(\0132*.gtxilib.oopclasses."
  "protos.StringListProtoH\000\022A\n\016int_list_val"
  "ue\030\014 \001(\0132\'.gtxilib.oopclasses.protos.Int"
  "ListProtoH\000\"\231\001\n\tTypeProto\022\013\n\007UNKNOWN\020\000\022\013"
  "\n\007BOOLEAN\020\001\022\010\n\004BYTE\020\002\022\t\n\005SHORT\020\003\022\010\n\004CHAR"
  "\020\004\022\007\n\003INT\020\005\022\t\n\005FLOAT\020\006\022\010\n\004LONG\020\007\022\n\n\006DOUB"
  "LE\020\010\022\n\n\006STRING\020\t\022\017\n\013STRING_LIST\020\n\022\014\n\010INT"
  "_LIST\020\013B\007\n\005valueB\007\n\005_type\"\300\001\n\rMetadataPr"
  "oto\022O\n\014metadata_map\030\001 \003(\01329.gtxilib.oopc"
  "lasses.protos.MetadataProto.MetadataMapE"
  "ntry\032^\n\020MetadataMapEntry\022\013\n\003key\030\001 \001(\t\0229\n"
  "\005value\030\002 \001(\0132*.gtxilib.oopclasses.protos"
  ".TypedValueProto:\0028\001\"\363\001\n\020CheckResultProt"
  "o\022\032\n\022source_check_class\030\001 \001(\t\022\021\n\tresult_"
  "id\030\002 \001(\005\022 \n\023hierarchy_source_id\030\003 \001(\003H\000\210"
  "\001\001\022:\n\013result_type\030\004 \001(\0162%.gtxilib.oopcla"
  "sses.protos.ResultType\022:\n\010metadata\030\005 \001(\013"
  "2(.gtxilib.oopclasses.protos.MetadataPro"
  "toB\026\n\024_hierarchy_source_id\"\235\001\n\027Accessibi"
  "lityEvaluation\022D\n\thierarchy\030\001 \001(\01321.gtxi"
  "lib.oopclasses.protos.AccessibilityHiera"
  "rchy\022<\n\007results\030\002 \003(\0132+.gtxilib.oopclass"
  "es.protos.CheckResultProtoB\010P\001\242\002\003GTXb\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_result_2eproto_deps[2] = {
  &::descriptor_table_enums_2eproto,
  &::descriptor_table_gtx_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_result_2eproto_sccs[7] = {
  &scc_info_AccessibilityEvaluation_result_2eproto.base,
  &scc_info_CheckResultProto_result_2eproto.base,
  &scc_info_IntListProto_result_2eproto.base,
  &scc_info_MetadataProto_result_2eproto.base,
  &scc_info_MetadataProto_MetadataMapEntry_DoNotUse_result_2eproto.base,
  &scc_info_StringListProto_result_2eproto.base,
  &scc_info_TypedValueProto_result_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_result_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_result_2eproto = {
  false, false, descriptor_table_protodef_result_2eproto, "result.proto", 1364,
  &descriptor_table_result_2eproto_once, descriptor_table_result_2eproto_sccs, descriptor_table_result_2eproto_deps, 7, 2,
  schemas, file_default_instances, TableStruct_result_2eproto::offsets,
  file_level_metadata_result_2eproto, 7, file_level_enum_descriptors_result_2eproto, file_level_service_descriptors_result_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_result_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_result_2eproto)), true);
namespace gtxilib {
namespace oopclasses {
namespace protos {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TypedValueProto_TypeProto_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_result_2eproto);
  return file_level_enum_descriptors_result_2eproto[0];
}
bool TypedValueProto_TypeProto_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr TypedValueProto_TypeProto TypedValueProto::UNKNOWN;
constexpr TypedValueProto_TypeProto TypedValueProto::BOOLEAN;
constexpr TypedValueProto_TypeProto TypedValueProto::BYTE;
constexpr TypedValueProto_TypeProto TypedValueProto::SHORT;
constexpr TypedValueProto_TypeProto TypedValueProto::CHAR;
constexpr TypedValueProto_TypeProto TypedValueProto::INT;
constexpr TypedValueProto_TypeProto TypedValueProto::FLOAT;
constexpr TypedValueProto_TypeProto TypedValueProto::LONG;
constexpr TypedValueProto_TypeProto TypedValueProto::DOUBLE;
constexpr TypedValueProto_TypeProto TypedValueProto::STRING;
constexpr TypedValueProto_TypeProto TypedValueProto::STRING_LIST;
constexpr TypedValueProto_TypeProto TypedValueProto::INT_LIST;
constexpr TypedValueProto_TypeProto TypedValueProto::TypeProto_MIN;
constexpr TypedValueProto_TypeProto TypedValueProto::TypeProto_MAX;
constexpr int TypedValueProto::TypeProto_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void StringListProto::InitAsDefaultInstance() {
}
class StringListProto::_Internal {
 public:
};

StringListProto::StringListProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gtxilib.oopclasses.protos.StringListProto)
}
StringListProto::StringListProto(const StringListProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gtxilib.oopclasses.protos.StringListProto)
}

void StringListProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StringListProto_result_2eproto.base);
}

StringListProto::~StringListProto() {
  // @@protoc_insertion_point(destructor:gtxilib.oopclasses.protos.StringListProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StringListProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StringListProto::ArenaDtor(void* object) {
  StringListProto* _this = reinterpret_cast< StringListProto* >(object);
  (void)_this;
}
void StringListProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StringListProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StringListProto& StringListProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StringListProto_result_2eproto.base);
  return *internal_default_instance();
}


void StringListProto::Clear() {
// @@protoc_insertion_point(message_clear_start:gtxilib.oopclasses.protos.StringListProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StringListProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_values();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gtxilib.oopclasses.protos.StringListProto.values"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StringListProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gtxilib.oopclasses.protos.StringListProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string values = 1;
  for (int i = 0, n = this->_internal_values_size(); i < n; i++) {
    const auto& s = this->_internal_values(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gtxilib.oopclasses.protos.StringListProto.values");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gtxilib.oopclasses.protos.StringListProto)
  return target;
}

size_t StringListProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gtxilib.oopclasses.protos.StringListProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string values = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(values_.size());
  for (int i = 0, n = values_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      values_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringListProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gtxilib.oopclasses.protos.StringListProto)
  GOOGLE_DCHECK_NE(&from, this);
  const StringListProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StringListProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gtxilib.oopclasses.protos.StringListProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gtxilib.oopclasses.protos.StringListProto)
    MergeFrom(*source);
  }
}

void StringListProto::MergeFrom(const StringListProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gtxilib.oopclasses.protos.StringListProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void StringListProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gtxilib.oopclasses.protos.StringListProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringListProto::CopyFrom(const StringListProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gtxilib.oopclasses.protos.StringListProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringListProto::IsInitialized() const {
  return true;
}

void StringListProto::InternalSwap(StringListProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StringListProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IntListProto::InitAsDefaultInstance() {
}
class IntListProto::_Internal {
 public:
};

IntListProto::IntListProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gtxilib.oopclasses.protos.IntListProto)
}
IntListProto::IntListProto(const IntListProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gtxilib.oopclasses.protos.IntListProto)
}

void IntListProto::SharedCtor() {
}

IntListProto::~IntListProto() {
  // @@protoc_insertion_point(destructor:gtxilib.oopclasses.protos.IntListProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IntListProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IntListProto::ArenaDtor(void* object) {
  IntListProto* _this = reinterpret_cast< IntListProto* >(object);
  (void)_this;
}
void IntListProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IntListProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntListProto& IntListProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntListProto_result_2eproto.base);
  return *internal_default_instance();
}


void IntListProto::Clear() {
// @@protoc_insertion_point(message_clear_start:gtxilib.oopclasses.protos.IntListProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IntListProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_values(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_values(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IntListProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gtxilib.oopclasses.protos.IntListProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 values = 1;
  {
    int byte_size = _values_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_values(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gtxilib.oopclasses.protos.IntListProto)
  return target;
}

size_t IntListProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gtxilib.oopclasses.protos.IntListProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 values = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->values_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _values_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntListProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gtxilib.oopclasses.protos.IntListProto)
  GOOGLE_DCHECK_NE(&from, this);
  const IntListProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntListProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gtxilib.oopclasses.protos.IntListProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gtxilib.oopclasses.protos.IntListProto)
    MergeFrom(*source);
  }
}

void IntListProto::MergeFrom(const IntListProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gtxilib.oopclasses.protos.IntListProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void IntListProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gtxilib.oopclasses.protos.IntListProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntListProto::CopyFrom(const IntListProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gtxilib.oopclasses.protos.IntListProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntListProto::IsInitialized() const {
  return true;
}

void IntListProto::InternalSwap(IntListProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntListProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TypedValueProto::InitAsDefaultInstance() {
  ::gtxilib::oopclasses::protos::_TypedValueProto_default_instance_.boolean_value_ = false;
  ::gtxilib::oopclasses::protos::_TypedValueProto_default_instance_.byte_value_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::gtxilib::oopclasses::protos::_TypedValueProto_default_instance_.short_value_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::gtxilib::oopclasses::protos::_TypedValueProto_default_instance_.char_value_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::gtxilib::oopclasses::protos::_TypedValueProto_default_instance_.int_value_ = 0;
  ::gtxilib::oopclasses::protos::_TypedValueProto_default_instance_.float_value_ = 0;
  ::gtxilib::oopclasses::protos::_TypedValueProto_default_instance_.long_value_ = PROTOBUF_LONGLONG(0);
  ::gtxilib::oopclasses::protos::_TypedValueProto_default_instance_.double_value_ = 0;
  ::gtxilib::oopclasses::protos::_TypedValueProto_default_instance_.string_value_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::gtxilib::oopclasses::protos::_TypedValueProto_default_instance_.string_list_value_ = const_cast< ::gtxilib::oopclasses::protos::StringListProto*>(
      ::gtxilib::oopclasses::protos::StringListProto::internal_default_instance());
  ::gtxilib::oopclasses::protos::_TypedValueProto_default_instance_.int_list_value_ = const_cast< ::gtxilib::oopclasses::protos::IntListProto*>(
      ::gtxilib::oopclasses::protos::IntListProto::internal_default_instance());
}
class TypedValueProto::_Internal {
 public:
  using HasBits = decltype(std::declval<TypedValueProto>()._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::gtxilib::oopclasses::protos::StringListProto& string_list_value(const TypedValueProto* msg);
  static const ::gtxilib::oopclasses::protos::IntListProto& int_list_value(const TypedValueProto* msg);
};

const ::gtxilib::oopclasses::protos::StringListProto&
TypedValueProto::_Internal::string_list_value(const TypedValueProto* msg) {
  return *msg->value_.string_list_value_;
}
const ::gtxilib::oopclasses::protos::IntListProto&
TypedValueProto::_Internal::int_list_value(const TypedValueProto* msg) {
  return *msg->value_.int_list_value_;
}
void TypedValueProto::set_allocated_string_list_value(::gtxilib::oopclasses::protos::StringListProto* string_list_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value();
  if (string_list_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(string_list_value);
    if (message_arena != submessage_arena) {
      string_list_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, string_list_value, submessage_arena);
    }
    set_has_string_list_value();
    value_.string_list_value_ = string_list_value;
  }
  // @@protoc_insertion_point(field_set_allocated:gtxilib.oopclasses.protos.TypedValueProto.string_list_value)
}
void TypedValueProto::set_allocated_int_list_value(::gtxilib::oopclasses::protos::IntListProto* int_list_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value();
  if (int_list_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(int_list_value);
    if (message_arena != submessage_arena) {
      int_list_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, int_list_value, submessage_arena);
    }
    set_has_int_list_value();
    value_.int_list_value_ = int_list_value;
  }
  // @@protoc_insertion_point(field_set_allocated:gtxilib.oopclasses.protos.TypedValueProto.int_list_value)
}
TypedValueProto::TypedValueProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gtxilib.oopclasses.protos.TypedValueProto)
}
TypedValueProto::TypedValueProto(const TypedValueProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_ = from.type_;
  clear_has_value();
  switch (from.value_case()) {
    case kBooleanValue: {
      _internal_set_boolean_value(from._internal_boolean_value());
      break;
    }
    case kByteValue: {
      _internal_set_byte_value(from._internal_byte_value());
      break;
    }
    case kShortValue: {
      _internal_set_short_value(from._internal_short_value());
      break;
    }
    case kCharValue: {
      _internal_set_char_value(from._internal_char_value());
      break;
    }
    case kIntValue: {
      _internal_set_int_value(from._internal_int_value());
      break;
    }
    case kFloatValue: {
      _internal_set_float_value(from._internal_float_value());
      break;
    }
    case kLongValue: {
      _internal_set_long_value(from._internal_long_value());
      break;
    }
    case kDoubleValue: {
      _internal_set_double_value(from._internal_double_value());
      break;
    }
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kStringListValue: {
      _internal_mutable_string_list_value()->::gtxilib::oopclasses::protos::StringListProto::MergeFrom(from._internal_string_list_value());
      break;
    }
    case kIntListValue: {
      _internal_mutable_int_list_value()->::gtxilib::oopclasses::protos::IntListProto::MergeFrom(from._internal_int_list_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:gtxilib.oopclasses.protos.TypedValueProto)
}

void TypedValueProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TypedValueProto_result_2eproto.base);
  type_ = 0;
  clear_has_value();
}

TypedValueProto::~TypedValueProto() {
  // @@protoc_insertion_point(destructor:gtxilib.oopclasses.protos.TypedValueProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TypedValueProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_value()) {
    clear_value();
  }
}

void TypedValueProto::ArenaDtor(void* object) {
  TypedValueProto* _this = reinterpret_cast< TypedValueProto* >(object);
  (void)_this;
}
void TypedValueProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TypedValueProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TypedValueProto& TypedValueProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TypedValueProto_result_2eproto.base);
  return *internal_default_instance();
}


void TypedValueProto::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:gtxilib.oopclasses.protos.TypedValueProto)
  switch (value_case()) {
    case kBooleanValue: {
      // No need to clear
      break;
    }
    case kByteValue: {
      value_.byte_value_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kShortValue: {
      value_.short_value_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kCharValue: {
      value_.char_value_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kIntValue: {
      // No need to clear
      break;
    }
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kLongValue: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      value_.string_value_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kStringListValue: {
      if (GetArena() == nullptr) {
        delete value_.string_list_value_;
      }
      break;
    }
    case kIntListValue: {
      if (GetArena() == nullptr) {
        delete value_.int_list_value_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void TypedValueProto::Clear() {
// @@protoc_insertion_point(message_clear_start:gtxilib.oopclasses.protos.TypedValueProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  clear_value();
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TypedValueProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gtxilib.oopclasses.protos.TypedValueProto.TypeProto type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::gtxilib::oopclasses::protos::TypedValueProto_TypeProto>(val));
        } else goto handle_unusual;
        continue;
      // bool boolean_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _internal_set_boolean_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes byte_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_byte_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes short_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_short_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes char_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_char_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 int_value = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _internal_set_int_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float float_value = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          _internal_set_float_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int64 long_value = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _internal_set_long_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double double_value = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 73)) {
          _internal_set_double_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string string_value = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_string_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gtxilib.oopclasses.protos.TypedValueProto.string_value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .gtxilib.oopclasses.protos.StringListProto string_list_value = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_string_list_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .gtxilib.oopclasses.protos.IntListProto int_list_value = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_int_list_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TypedValueProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gtxilib.oopclasses.protos.TypedValueProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gtxilib.oopclasses.protos.TypedValueProto.TypeProto type = 1;
  if (_internal_has_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // bool boolean_value = 2;
  if (_internal_has_boolean_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_boolean_value(), target);
  }

  // bytes byte_value = 3;
  if (_internal_has_byte_value()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_byte_value(), target);
  }

  // bytes short_value = 4;
  if (_internal_has_short_value()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_short_value(), target);
  }

  // bytes char_value = 5;
  if (_internal_has_char_value()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_char_value(), target);
  }

  // int32 int_value = 6;
  if (_internal_has_int_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_int_value(), target);
  }

  // float float_value = 7;
  if (_internal_has_float_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_float_value(), target);
  }

  // int64 long_value = 8;
  if (_internal_has_long_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_long_value(), target);
  }

  // double double_value = 9;
  if (_internal_has_double_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(9, this->_internal_double_value(), target);
  }

  // string string_value = 10;
  if (_internal_has_string_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_value().data(), static_cast<int>(this->_internal_string_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gtxilib.oopclasses.protos.TypedValueProto.string_value");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_string_value(), target);
  }

  // .gtxilib.oopclasses.protos.StringListProto string_list_value = 11;
  if (_internal_has_string_list_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::string_list_value(this), target, stream);
  }

  // .gtxilib.oopclasses.protos.IntListProto int_list_value = 12;
  if (_internal_has_int_list_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::int_list_value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gtxilib.oopclasses.protos.TypedValueProto)
  return target;
}

size_t TypedValueProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gtxilib.oopclasses.protos.TypedValueProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gtxilib.oopclasses.protos.TypedValueProto.TypeProto type = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  switch (value_case()) {
    // bool boolean_value = 2;
    case kBooleanValue: {
      total_size += 1 + 1;
      break;
    }
    // bytes byte_value = 3;
    case kByteValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_byte_value());
      break;
    }
    // bytes short_value = 4;
    case kShortValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_short_value());
      break;
    }
    // bytes char_value = 5;
    case kCharValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_char_value());
      break;
    }
    // int32 int_value = 6;
    case kIntValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_int_value());
      break;
    }
    // float float_value = 7;
    case kFloatValue: {
      total_size += 1 + 4;
      break;
    }
    // int64 long_value = 8;
    case kLongValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_long_value());
      break;
    }
    // double double_value = 9;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // string string_value = 10;
    case kStringValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_value());
      break;
    }
    // .gtxilib.oopclasses.protos.StringListProto string_list_value = 11;
    case kStringListValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.string_list_value_);
      break;
    }
    // .gtxilib.oopclasses.protos.IntListProto int_list_value = 12;
    case kIntListValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.int_list_value_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TypedValueProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gtxilib.oopclasses.protos.TypedValueProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TypedValueProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TypedValueProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gtxilib.oopclasses.protos.TypedValueProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gtxilib.oopclasses.protos.TypedValueProto)
    MergeFrom(*source);
  }
}

void TypedValueProto::MergeFrom(const TypedValueProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gtxilib.oopclasses.protos.TypedValueProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_type()) {
    _internal_set_type(from._internal_type());
  }
  switch (from.value_case()) {
    case kBooleanValue: {
      _internal_set_boolean_value(from._internal_boolean_value());
      break;
    }
    case kByteValue: {
      _internal_set_byte_value(from._internal_byte_value());
      break;
    }
    case kShortValue: {
      _internal_set_short_value(from._internal_short_value());
      break;
    }
    case kCharValue: {
      _internal_set_char_value(from._internal_char_value());
      break;
    }
    case kIntValue: {
      _internal_set_int_value(from._internal_int_value());
      break;
    }
    case kFloatValue: {
      _internal_set_float_value(from._internal_float_value());
      break;
    }
    case kLongValue: {
      _internal_set_long_value(from._internal_long_value());
      break;
    }
    case kDoubleValue: {
      _internal_set_double_value(from._internal_double_value());
      break;
    }
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kStringListValue: {
      _internal_mutable_string_list_value()->::gtxilib::oopclasses::protos::StringListProto::MergeFrom(from._internal_string_list_value());
      break;
    }
    case kIntListValue: {
      _internal_mutable_int_list_value()->::gtxilib::oopclasses::protos::IntListProto::MergeFrom(from._internal_int_list_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void TypedValueProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gtxilib.oopclasses.protos.TypedValueProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypedValueProto::CopyFrom(const TypedValueProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gtxilib.oopclasses.protos.TypedValueProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypedValueProto::IsInitialized() const {
  return true;
}

void TypedValueProto::InternalSwap(TypedValueProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(type_, other->type_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TypedValueProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

MetadataProto_MetadataMapEntry_DoNotUse::MetadataProto_MetadataMapEntry_DoNotUse() {}
MetadataProto_MetadataMapEntry_DoNotUse::MetadataProto_MetadataMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MetadataProto_MetadataMapEntry_DoNotUse::MergeFrom(const MetadataProto_MetadataMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MetadataProto_MetadataMapEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MetadataProto_MetadataMapEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void MetadataProto::InitAsDefaultInstance() {
}
class MetadataProto::_Internal {
 public:
};

MetadataProto::MetadataProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_map_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gtxilib.oopclasses.protos.MetadataProto)
}
MetadataProto::MetadataProto(const MetadataProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_map_.MergeFrom(from.metadata_map_);
  // @@protoc_insertion_point(copy_constructor:gtxilib.oopclasses.protos.MetadataProto)
}

void MetadataProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MetadataProto_result_2eproto.base);
}

MetadataProto::~MetadataProto() {
  // @@protoc_insertion_point(destructor:gtxilib.oopclasses.protos.MetadataProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MetadataProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MetadataProto::ArenaDtor(void* object) {
  MetadataProto* _this = reinterpret_cast< MetadataProto* >(object);
  (void)_this;
}
void MetadataProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MetadataProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataProto& MetadataProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MetadataProto_result_2eproto.base);
  return *internal_default_instance();
}


void MetadataProto::Clear() {
// @@protoc_insertion_point(message_clear_start:gtxilib.oopclasses.protos.MetadataProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_map_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MetadataProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .gtxilib.oopclasses.protos.TypedValueProto> metadata_map = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_map_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MetadataProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gtxilib.oopclasses.protos.MetadataProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .gtxilib.oopclasses.protos.TypedValueProto> metadata_map = 1;
  if (!this->_internal_metadata_map().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::gtxilib::oopclasses::protos::TypedValueProto >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "gtxilib.oopclasses.protos.MetadataProto.MetadataMapEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata_map().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::gtxilib::oopclasses::protos::TypedValueProto >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::gtxilib::oopclasses::protos::TypedValueProto >::const_iterator
          it = this->_internal_metadata_map().begin();
          it != this->_internal_metadata_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MetadataProto_MetadataMapEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::gtxilib::oopclasses::protos::TypedValueProto >::const_iterator
          it = this->_internal_metadata_map().begin();
          it != this->_internal_metadata_map().end(); ++it) {
        target = MetadataProto_MetadataMapEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gtxilib.oopclasses.protos.MetadataProto)
  return target;
}

size_t MetadataProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gtxilib.oopclasses.protos.MetadataProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .gtxilib.oopclasses.protos.TypedValueProto> metadata_map = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_map_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::gtxilib::oopclasses::protos::TypedValueProto >::const_iterator
      it = this->_internal_metadata_map().begin();
      it != this->_internal_metadata_map().end(); ++it) {
    total_size += MetadataProto_MetadataMapEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gtxilib.oopclasses.protos.MetadataProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MetadataProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gtxilib.oopclasses.protos.MetadataProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gtxilib.oopclasses.protos.MetadataProto)
    MergeFrom(*source);
  }
}

void MetadataProto::MergeFrom(const MetadataProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gtxilib.oopclasses.protos.MetadataProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_map_.MergeFrom(from.metadata_map_);
}

void MetadataProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gtxilib.oopclasses.protos.MetadataProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataProto::CopyFrom(const MetadataProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gtxilib.oopclasses.protos.MetadataProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataProto::IsInitialized() const {
  return true;
}

void MetadataProto::InternalSwap(MetadataProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_map_.Swap(&other->metadata_map_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MetadataProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CheckResultProto::InitAsDefaultInstance() {
  ::gtxilib::oopclasses::protos::_CheckResultProto_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::gtxilib::oopclasses::protos::MetadataProto*>(
      ::gtxilib::oopclasses::protos::MetadataProto::internal_default_instance());
}
class CheckResultProto::_Internal {
 public:
  using HasBits = decltype(std::declval<CheckResultProto>()._has_bits_);
  static void set_has_hierarchy_source_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::gtxilib::oopclasses::protos::MetadataProto& metadata(const CheckResultProto* msg);
};

const ::gtxilib::oopclasses::protos::MetadataProto&
CheckResultProto::_Internal::metadata(const CheckResultProto* msg) {
  return *msg->metadata_;
}
CheckResultProto::CheckResultProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gtxilib.oopclasses.protos.CheckResultProto)
}
CheckResultProto::CheckResultProto(const CheckResultProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  source_check_class_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source_check_class().empty()) {
    source_check_class_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_source_check_class(),
      GetArena());
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::gtxilib::oopclasses::protos::MetadataProto(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  ::memcpy(&hierarchy_source_id_, &from.hierarchy_source_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_type_) -
    reinterpret_cast<char*>(&hierarchy_source_id_)) + sizeof(result_type_));
  // @@protoc_insertion_point(copy_constructor:gtxilib.oopclasses.protos.CheckResultProto)
}

void CheckResultProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CheckResultProto_result_2eproto.base);
  source_check_class_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_type_) -
      reinterpret_cast<char*>(&metadata_)) + sizeof(result_type_));
}

CheckResultProto::~CheckResultProto() {
  // @@protoc_insertion_point(destructor:gtxilib.oopclasses.protos.CheckResultProto)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CheckResultProto::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  source_check_class_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
}

void CheckResultProto::ArenaDtor(void* object) {
  CheckResultProto* _this = reinterpret_cast< CheckResultProto* >(object);
  (void)_this;
}
void CheckResultProto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CheckResultProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckResultProto& CheckResultProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CheckResultProto_result_2eproto.base);
  return *internal_default_instance();
}


void CheckResultProto::Clear() {
// @@protoc_insertion_point(message_clear_start:gtxilib.oopclasses.protos.CheckResultProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_check_class_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  hierarchy_source_id_ = PROTOBUF_LONGLONG(0);
  ::memset(&result_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_type_) -
      reinterpret_cast<char*>(&result_id_)) + sizeof(result_type_));
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckResultProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string source_check_class = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_source_check_class();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gtxilib.oopclasses.protos.CheckResultProto.source_check_class"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 result_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          result_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 hierarchy_source_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_hierarchy_source_id(&has_bits);
          hierarchy_source_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .gtxilib.oopclasses.protos.ResultType result_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result_type(static_cast<::gtxilib::oopclasses::protos::ResultType>(val));
        } else goto handle_unusual;
        continue;
      // .gtxilib.oopclasses.protos.MetadataProto metadata = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CheckResultProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gtxilib.oopclasses.protos.CheckResultProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string source_check_class = 1;
  if (this->source_check_class().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_check_class().data(), static_cast<int>(this->_internal_source_check_class().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gtxilib.oopclasses.protos.CheckResultProto.source_check_class");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_source_check_class(), target);
  }

  // int32 result_id = 2;
  if (this->result_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_result_id(), target);
  }

  // int64 hierarchy_source_id = 3;
  if (_internal_has_hierarchy_source_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_hierarchy_source_id(), target);
  }

  // .gtxilib.oopclasses.protos.ResultType result_type = 4;
  if (this->result_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_result_type(), target);
  }

  // .gtxilib.oopclasses.protos.MetadataProto metadata = 5;
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gtxilib.oopclasses.protos.CheckResultProto)
  return target;
}

size_t CheckResultProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gtxilib.oopclasses.protos.CheckResultProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string source_check_class = 1;
  if (this->source_check_class().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_check_class());
  }

  // .gtxilib.oopclasses.protos.MetadataProto metadata = 5;
  if (this->has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  // int64 hierarchy_source_id = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_hierarchy_source_id());
  }

  // int32 result_id = 2;
  if (this->result_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result_id());
  }

  // .gtxilib.oopclasses.protos.ResultType result_type = 4;
  if (this->result_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckResultProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gtxilib.oopclasses.protos.CheckResultProto)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckResultProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CheckResultProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gtxilib.oopclasses.protos.CheckResultProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gtxilib.oopclasses.protos.CheckResultProto)
    MergeFrom(*source);
  }
}

void CheckResultProto::MergeFrom(const CheckResultProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gtxilib.oopclasses.protos.CheckResultProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source_check_class().size() > 0) {
    _internal_set_source_check_class(from._internal_source_check_class());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->::gtxilib::oopclasses::protos::MetadataProto::MergeFrom(from._internal_metadata());
  }
  if (from._internal_has_hierarchy_source_id()) {
    _internal_set_hierarchy_source_id(from._internal_hierarchy_source_id());
  }
  if (from.result_id() != 0) {
    _internal_set_result_id(from._internal_result_id());
  }
  if (from.result_type() != 0) {
    _internal_set_result_type(from._internal_result_type());
  }
}

void CheckResultProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gtxilib.oopclasses.protos.CheckResultProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckResultProto::CopyFrom(const CheckResultProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gtxilib.oopclasses.protos.CheckResultProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckResultProto::IsInitialized() const {
  return true;
}

void CheckResultProto::InternalSwap(CheckResultProto* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  source_check_class_.Swap(&other->source_check_class_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CheckResultProto, result_type_)
      + sizeof(CheckResultProto::result_type_)
      - PROTOBUF_FIELD_OFFSET(CheckResultProto, metadata_)>(
          reinterpret_cast<char*>(&metadata_),
          reinterpret_cast<char*>(&other->metadata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckResultProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AccessibilityEvaluation::InitAsDefaultInstance() {
  ::gtxilib::oopclasses::protos::_AccessibilityEvaluation_default_instance_._instance.get_mutable()->hierarchy_ = const_cast< ::gtxilib::oopclasses::protos::AccessibilityHierarchy*>(
      ::gtxilib::oopclasses::protos::AccessibilityHierarchy::internal_default_instance());
}
class AccessibilityEvaluation::_Internal {
 public:
  static const ::gtxilib::oopclasses::protos::AccessibilityHierarchy& hierarchy(const AccessibilityEvaluation* msg);
};

const ::gtxilib::oopclasses::protos::AccessibilityHierarchy&
AccessibilityEvaluation::_Internal::hierarchy(const AccessibilityEvaluation* msg) {
  return *msg->hierarchy_;
}
void AccessibilityEvaluation::clear_hierarchy() {
  if (GetArena() == nullptr && hierarchy_ != nullptr) {
    delete hierarchy_;
  }
  hierarchy_ = nullptr;
}
AccessibilityEvaluation::AccessibilityEvaluation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gtxilib.oopclasses.protos.AccessibilityEvaluation)
}
AccessibilityEvaluation::AccessibilityEvaluation(const AccessibilityEvaluation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      results_(from.results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_hierarchy()) {
    hierarchy_ = new ::gtxilib::oopclasses::protos::AccessibilityHierarchy(*from.hierarchy_);
  } else {
    hierarchy_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gtxilib.oopclasses.protos.AccessibilityEvaluation)
}

void AccessibilityEvaluation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AccessibilityEvaluation_result_2eproto.base);
  hierarchy_ = nullptr;
}

AccessibilityEvaluation::~AccessibilityEvaluation() {
  // @@protoc_insertion_point(destructor:gtxilib.oopclasses.protos.AccessibilityEvaluation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AccessibilityEvaluation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete hierarchy_;
}

void AccessibilityEvaluation::ArenaDtor(void* object) {
  AccessibilityEvaluation* _this = reinterpret_cast< AccessibilityEvaluation* >(object);
  (void)_this;
}
void AccessibilityEvaluation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AccessibilityEvaluation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccessibilityEvaluation& AccessibilityEvaluation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccessibilityEvaluation_result_2eproto.base);
  return *internal_default_instance();
}


void AccessibilityEvaluation::Clear() {
// @@protoc_insertion_point(message_clear_start:gtxilib.oopclasses.protos.AccessibilityEvaluation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  if (GetArena() == nullptr && hierarchy_ != nullptr) {
    delete hierarchy_;
  }
  hierarchy_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccessibilityEvaluation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gtxilib.oopclasses.protos.AccessibilityHierarchy hierarchy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_hierarchy(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gtxilib.oopclasses.protos.CheckResultProto results = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccessibilityEvaluation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gtxilib.oopclasses.protos.AccessibilityEvaluation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gtxilib.oopclasses.protos.AccessibilityHierarchy hierarchy = 1;
  if (this->has_hierarchy()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::hierarchy(this), target, stream);
  }

  // repeated .gtxilib.oopclasses.protos.CheckResultProto results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gtxilib.oopclasses.protos.AccessibilityEvaluation)
  return target;
}

size_t AccessibilityEvaluation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gtxilib.oopclasses.protos.AccessibilityEvaluation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gtxilib.oopclasses.protos.CheckResultProto results = 2;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gtxilib.oopclasses.protos.AccessibilityHierarchy hierarchy = 1;
  if (this->has_hierarchy()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *hierarchy_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccessibilityEvaluation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gtxilib.oopclasses.protos.AccessibilityEvaluation)
  GOOGLE_DCHECK_NE(&from, this);
  const AccessibilityEvaluation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccessibilityEvaluation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gtxilib.oopclasses.protos.AccessibilityEvaluation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gtxilib.oopclasses.protos.AccessibilityEvaluation)
    MergeFrom(*source);
  }
}

void AccessibilityEvaluation::MergeFrom(const AccessibilityEvaluation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gtxilib.oopclasses.protos.AccessibilityEvaluation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.has_hierarchy()) {
    _internal_mutable_hierarchy()->::gtxilib::oopclasses::protos::AccessibilityHierarchy::MergeFrom(from._internal_hierarchy());
  }
}

void AccessibilityEvaluation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gtxilib.oopclasses.protos.AccessibilityEvaluation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccessibilityEvaluation::CopyFrom(const AccessibilityEvaluation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gtxilib.oopclasses.protos.AccessibilityEvaluation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccessibilityEvaluation::IsInitialized() const {
  return true;
}

void AccessibilityEvaluation::InternalSwap(AccessibilityEvaluation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  results_.InternalSwap(&other->results_);
  swap(hierarchy_, other->hierarchy_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AccessibilityEvaluation::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace oopclasses
}  // namespace gtxilib
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::gtxilib::oopclasses::protos::StringListProto* Arena::CreateMaybeMessage< ::gtxilib::oopclasses::protos::StringListProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gtxilib::oopclasses::protos::StringListProto >(arena);
}
template<> PROTOBUF_NOINLINE ::gtxilib::oopclasses::protos::IntListProto* Arena::CreateMaybeMessage< ::gtxilib::oopclasses::protos::IntListProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gtxilib::oopclasses::protos::IntListProto >(arena);
}
template<> PROTOBUF_NOINLINE ::gtxilib::oopclasses::protos::TypedValueProto* Arena::CreateMaybeMessage< ::gtxilib::oopclasses::protos::TypedValueProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gtxilib::oopclasses::protos::TypedValueProto >(arena);
}
template<> PROTOBUF_NOINLINE ::gtxilib::oopclasses::protos::MetadataProto_MetadataMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::gtxilib::oopclasses::protos::MetadataProto_MetadataMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gtxilib::oopclasses::protos::MetadataProto_MetadataMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::gtxilib::oopclasses::protos::MetadataProto* Arena::CreateMaybeMessage< ::gtxilib::oopclasses::protos::MetadataProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gtxilib::oopclasses::protos::MetadataProto >(arena);
}
template<> PROTOBUF_NOINLINE ::gtxilib::oopclasses::protos::CheckResultProto* Arena::CreateMaybeMessage< ::gtxilib::oopclasses::protos::CheckResultProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gtxilib::oopclasses::protos::CheckResultProto >(arena);
}
template<> PROTOBUF_NOINLINE ::gtxilib::oopclasses::protos::AccessibilityEvaluation* Arena::CreateMaybeMessage< ::gtxilib::oopclasses::protos::AccessibilityEvaluation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gtxilib::oopclasses::protos::AccessibilityEvaluation >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
